name: GCC (Linux)
on:
  push:
    tags:
      - 'GCC-LINUX-v*.*.*'
jobs:
  build-gcc:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
  
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  
    steps:
      - name: Generating Unique ID
        run: |
          BASE_NAME=$(echo "$GITHUB_REF" | sed 's|^refs/tags/||')
          BUILD_ID="${BASE_NAME}-$GITHUB_RUN_ID" 
          TAG_NAME=$(echo "$GITHUB_REF" | sed 's|^refs/tags/GCC-LINUX-v||')
          
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Unique ID: $BUILD_ID"
          echo "Tag version: $TAG_NAME"
    
      - name: Downloading GCC source
        run: |
          wget https://github.com/gcc-mirror/gcc/archive/refs/tags/releases/gcc-15.1.0.tar.gz
          
      - name: Unpacking GCC
        run: |
          tar -xf gcc-15.1.0.tar.xz
          mv gcc-15.1.0 gcc
          
      - name: Installing dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgmp-dev libmpfr-dev libmpc-dev \
            flex bison upx-ucl binutils xz-utils
          
      - name: Configuring GCC build
        run: |
          mkdir gcc-build
          cd gcc-build
          ../gcc/configure \
            --prefix=/usr/local/gcc-13 \
            --enable-languages=c \
            --disable-multilib \
            --disable-bootstrap \
            --disable-libsanitizer \
            --disable-libvtv \
            --disable-libgomp \
            --disable-libatomic \
            --disable-libquadmath \
            --disable-libssp \
            --disable-nls \
            --disable-shared \
            --enable-static \
            --with-system-zlib \
            --without-included-gettext \
            --enable-threads=posix \
            --enable-lto \
            --with-tune=generic \
            --with-arch=x86-64 \
            CFLAGS="-Oz -ffunction-sections -fdata-sections" \
            CXXFLAGS="-Oz -ffunction-sections -fdata-sections" \
            LDFLAGS="-Wl,--gc-sections -Wl,-s -static"
        working-directory: .
        
      - name: Building GCC
        run: |
          make -j$(nproc) STAGE1_CFLAGS="-Oz" BOOT_CFLAGS="-Oz" gcc
        working-directory: gcc-build
        
      - name: Optimizing GCC binary
        run: |
          strip --strip-all gcc/gcc-15.1.0
          strip --strip-all gcc/collect2
          upx --best --lzma gcc/gcc-15.1.0 || true
          upx --best --lzma gcc/collect2 || true
        working-directory: gcc-build
        
      - name: Creating manifest
        run: |
          cat > gcc-manifest.json << EOF
          {
            "name": "gcc",
            "version": "${{ env.TAG_NAME }}",
            "gcc_version": "15.1.0",
            "architecture": "x86_64",
            "platform": "linux",
            "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "build_id": "${{ env.BUILD_ID }}",
            "language": "c",
            "type": "standalone_binary",
            "features": {
              "lto_enabled": true,
              "static_build": true,
              "multilib_disabled": true,
              "bootstrap_disabled": true
            },
            "optimizations": [
              "size_optimized",
              "stripped",
              "static_linked"
            ],
            "file": "gcc-linux-x86_64.tar.xz",
            "note": "Standalone GCC binary - may need system libraries for linking"
          }
          EOF
        working-directory: gcc-build
        
      - name: Packaging GCC
        run: |
          mkdir gcc-standalone
          cp gcc/gcc-15.1.0 gcc-standalone/gcc
          cp gcc/collect2 gcc-standalone/
          tar --format=pax -cJf gcc-linux-x86_64.tar.xz gcc-standalone/
        working-directory: gcc-build
        
      - name: Releasing GCC (Linux)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.BUILD_ID }}
          name: "GCC x86_64 (Linux)"
          body: |
            ## GCC x86_64
           
            Optimized GCC C compiler binary for Linux x86_64.
            
          files: |
            gcc-build/gcc-linux-x86_64.tar.xz
            gcc-build/gcc-manifest.json
            
          draft: false
